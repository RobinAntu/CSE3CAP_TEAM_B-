{"version":3,"file":"TaskDetails-BwuBOROE.js","sources":["../../src/components/ui/Badge.jsx","../../src/pages/TaskDetails.jsx"],"sourcesContent":["import React from \"react\";\n\nexport default function Badge({ color = \"gray\", children, className = \"\" }) {\n  const colors = {\n    red: \"bg-red-100 text-red-700\",\n    yellow: \"bg-yellow-100 text-yellow-700\",\n    green: \"bg-green-100 text-green-700\",\n    gray: \"bg-gray-100 text-gray-700\",\n  };\n  return (\n    <span className={`inline-flex items-center rounded-full px-2 py-0.5 text-xs font-medium ${colors[color]} ${className}`}>\n      {children}\n    </span>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { getFunctions, httpsCallable } from \"firebase/functions\";\nimport Card from \"../components/ui/Card\";\nimport Button from \"../components/ui/Button\";\nimport Checkbox from \"../components/ui/Checkbox\";\nimport Badge from \"../components/ui/Badge\";\n\nexport default function TaskDetails() {\n  const { id } = useParams();\n  const [task, setTask] = useState(null);\n  const [suggestions, setSuggestions] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchSuggestions = async () => {\n      try {\n        const functions = getFunctions();\n        const getAISuggestions = httpsCallable(functions, 'getAISuggestions');\n        const result = await getAISuggestions({ \n          prompt: `Give me some suggestions for how to complete the following task: ${id}`\n        });\n        setSuggestions(result.data.suggestions);\n      } catch (error) {\n        setError(\"Failed to fetch AI suggestions. Please try again later.\");\n      }\n    };\n\n    fetchSuggestions();\n  }, [id]);\n\n  return (\n    <div className=\"space-y-6\">\n      <Link to=\"/dashboard\" className=\"text-[#2563eb]\">â€¹ Back to Dashboard</Link>\n      <Card className=\"p-6 space-y-4\">\n        <h1 className=\"text-2xl font-semibold\">Complete Research Paper Draft</h1>\n        <div className=\"grid gap-4 md:grid-cols-2\">\n          <div>\n            <p className=\"text-sm text-gray-500\">Course</p>\n            <p>Advanced Data Structures</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-500\">Deadline</p>\n            <p>May 15, 2024</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-500\">Estimated Completion Time</p>\n            <p>8 hours</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-500\">Priority Level</p>\n            <Badge color=\"red\">High</Badge>\n          </div>\n        </div>\n        <hr />\n        <div>\n          <p className=\"font-medium\">AI Suggestions for Improvement</p>\n          {loading && <p>Loading AI suggestions...</p>}\n          {error && <p className=\"text-red-500\">{error}</p>}\n          {suggestions && (\n            <ul className=\"list-disc pl-5 text-sm text-gray-600\">\n              {suggestions.split('\\n').map((suggestion, index) => (\n                <li key={index}>{suggestion}</li>\n              ))}\n            </ul>\n          )}\n        </div>\n        <div className=\"flex items-center justify-between pt-4\">\n          <Link to={`/task/edit/${id}`}>\n            <Button variant=\"ghost\">Edit Task</Button>\n          </Link>\n          <label className=\"flex items-center space-x-2\">\n            <Checkbox /> <span>Mark as Complete</span>\n          </label>\n        </div>\n      </Card>\n    </div>\n  );\n}\n"],"names":["Badge","color","children","className","jsx","red","yellow","green","gray","TaskDetails","id","useParams","task","setTask","useState","suggestions","setSuggestions","loading","setLoading","error","setError","useEffect","async","functions","getFunctions","getAISuggestions","httpsCallable","result","prompt","data","fetchSuggestions","jsxs","Link","to","Card","split","map","suggestion","index","Button","variant","Checkbox"],"mappings":"2OAEA,SAAwBA,GAAMC,MAAEA,EAAQ,gBAAQC,EAAAC,UAAUA,EAAY,KAOpE,OACEC,EAAAA,IAAC,OAAA,CAAKD,UAAW,yEAPJ,CACbE,IAAK,0BACLC,OAAQ,gCACRC,MAAO,8BACPC,KAAM,6BAG2FP,MAAUE,IACxGD,YAGP,CCNA,SAAwBO,IACtB,MAAMC,GAAEA,GAAOC,KACRC,EAAMC,GAAWC,EAAAA,SAAS,OAC1BC,EAAaC,GAAkBF,EAAAA,SAAS,OACxCG,EAASC,GAAcJ,EAAAA,UAAS,IAChCK,EAAOC,GAAYN,EAAAA,SAAS,MAmBnC,OAjBAO,EAAAA,UAAU,KACiBC,WACvB,IACE,MAAMC,EAAYC,IACZC,EAAmBC,EAAcH,EAAW,oBAC5CI,QAAeF,EAAiB,CACpCG,OAAQ,oEAAoElB,MAE9EM,EAAeW,EAAOE,KAAKd,YAC7B,OAASI,GACPC,EAAS,0DACX,GAGFU,IACC,CAACpB,MAGFqB,KAAC,MAAA,CAAI5B,UAAU,YACbD,SAAA,CAAAE,MAAC4B,EAAA,CAAKC,GAAG,aAAa9B,UAAU,iBAAiBD,SAAA,0BACjD6B,KAACG,EAAA,CAAK/B,UAAU,gBACdD,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAGD,UAAU,yBAAyBD,SAAA,oCACvC6B,KAAC,MAAA,CAAI5B,UAAU,4BACbD,SAAA,CAAA6B,OAAC,MAAA,CACC7B,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAED,UAAU,wBAAwBD,SAAA,aACrCE,IAAC,KAAEF,SAAA,uCAEJ,MAAA,CACCA,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAED,UAAU,wBAAwBD,SAAA,eACrCE,IAAC,KAAEF,SAAA,2BAEJ,MAAA,CACCA,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAED,UAAU,wBAAwBD,SAAA,gCACrCE,IAAC,KAAEF,SAAA,sBAEJ,MAAA,CACCA,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAED,UAAU,wBAAwBD,SAAA,mBACrCE,EAAAA,IAACJ,EAAA,CAAMC,MAAM,MAAMC,SAAA,qBAGtB,KAAA,WACA,MAAA,CACCA,SAAA,CAAAE,EAAAA,IAAC,IAAA,CAAED,UAAU,cAAcD,SAAA,mCAC1Be,GAAWb,EAAAA,IAAC,IAAA,CAAEF,SAAA,8BACdiB,KAASf,IAAC,IAAA,CAAED,UAAU,eAAgBD,SAAAiB,IACtCJ,GACCX,EAAAA,IAAC,KAAA,CAAGD,UAAU,uCACXD,SAAAa,EAAYoB,MAAM,MAAMC,IAAI,CAACC,EAAYC,IACxClC,EAAAA,IAAC,MAAgBF,SAAAmC,GAARC,WAKjBP,KAAC,MAAA,CAAI5B,UAAU,yCACbD,SAAA,GAAAE,IAAC4B,EAAA,CAAKC,GAAI,cAAcvB,IACtBR,eAACqC,EAAA,CAAOC,QAAQ,QAAQtC,SAAA,kBAE1B6B,KAAC,QAAA,CAAM5B,UAAU,8BACfD,SAAA,CAAAE,EAAAA,IAACqC,EAAA,IAAW,MAACrC,IAAC,QAAKF,SAAA,gCAM/B"}