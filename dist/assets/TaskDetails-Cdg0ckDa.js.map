{"version":3,"file":"TaskDetails-Cdg0ckDa.js","sources":["../../src/components/ui/Badge.jsx","../../src/pages/TaskDetails.jsx"],"sourcesContent":["import React from \"react\";\n\nexport default function Badge({ color = \"gray\", children, className = \"\" }) {\n  const colors = {\n    red: \"bg-red-100 text-red-700\",\n    yellow: \"bg-yellow-100 text-yellow-700\",\n    green: \"bg-green-100 text-green-700\",\n    gray: \"bg-gray-100 text-gray-700\",\n  };\n  return (\n    <span className={`inline-flex items-center rounded-full px-2 py-0.5 text-xs font-medium ${colors[color]} ${className}`}>\n      {children}\n    </span>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { getFunctions, httpsCallable } from \"firebase/functions\";\nimport Card from \"../components/ui/Card\";\nimport Button from \"../components/ui/Button\";\nimport Checkbox from \"../components/ui/Checkbox\";\nimport Badge from \"../components/ui/Badge\";\n\nexport default function TaskDetails() {\n  const { id } = useParams();\n  const [task, setTask] = useState(null);\n  const [suggestions, setSuggestions] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchSuggestions = async () => {\n      try {\n        const functions = getFunctions();\n        const getAISuggestions = httpsCallable(functions, 'getAISuggestions');\n        const result = await getAISuggestions({ \n          prompt: `Give me some suggestions for how to complete the following task: ${id}`\n        });\n        setSuggestions(result.data.suggestions);\n      } catch (error) {\n        setError(\"Failed to fetch AI suggestions. Please try again later.\");\n      }\n    };\n\n    fetchSuggestions();\n  }, [id]);\n\n  return (\n    <div className=\"space-y-6\">\n      <Link to=\"/dashboard\" className=\"text-[#2563eb]\">â€¹ Back to Dashboard</Link>\n      <Card className=\"p-6 space-y-4\">\n        <h1 className=\"text-2xl font-semibold\">Complete Research Paper Draft</h1>\n        <div className=\"grid gap-4 md:grid-cols-2\">\n          <div>\n            <p className=\"text-sm text-gray-500\">Course</p>\n            <p>Advanced Data Structures</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-500\">Deadline</p>\n            <p>May 15, 2024</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-500\">Estimated Completion Time</p>\n            <p>8 hours</p>\n          </div>\n          <div>\n            <p className=\"text-sm text-gray-500\">Priority Level</p>\n            <Badge color=\"red\">High</Badge>\n          </div>\n        </div>\n        <hr />\n        <div>\n          <p className=\"font-medium\">AI Suggestions for Improvement</p>\n          {loading && <p>Loading AI suggestions...</p>}\n          {error && <p className=\"text-red-500\">{error}</p>}\n          {suggestions && (\n            <ul className=\"list-disc pl-5 text-sm text-gray-600\">\n              {suggestions.split('\\n').map((suggestion, index) => (\n                <li key={index}>{suggestion}</li>\n              ))}\n            </ul>\n          )}\n        </div>\n        <div className=\"flex items-center justify-between pt-4\">\n          <Link to={`/task/edit/${id}`}>\n            <Button variant=\"ghost\">Edit Task</Button>\n          </Link>\n          <label className=\"flex items-center space-x-2\">\n            <Checkbox /> <span>Mark as Complete</span>\n          </label>\n        </div>\n      </Card>\n    </div>\n  );\n}\n"],"names":["jsx","useState","useEffect","error","jsxs"],"mappings":"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"}