{"version":3,"file":"Settings-BPstx0Z8.js","sources":["../../src/components/ui/Switch.jsx","../../src/components/ui/Accordion.jsx","../../src/pages/Settings.jsx"],"sourcesContent":["import React from \"react\";\n\nexport default function Switch({ checked, onChange, className = \"\" }) {\n  return (\n    <button\n      type=\"button\"\n      onClick={() => onChange(!checked)}\n      className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500/40 ${\n        checked ? \"bg-blue-600\" : \"bg-gray-300\"\n      } ${className}`}\n      aria-pressed={checked}\n    >\n      <span\n        className={`inline-block h-5 w-5 transform rounded-full bg-white transition-transform ${\n          checked ? \"translate-x-5\" : \"translate-x-1\"\n        }`}\n      />\n    </button>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport function Accordion({ children }) {\n  return <div className=\"divide-y divide-gray-200\">{children}</div>;\n}\n\nexport function AccordionItem({ title, children, defaultOpen = false, icon }) {\n  const [open, setOpen] = useState(defaultOpen);\n  return (\n    <div>\n      <button\n        type=\"button\"\n        className=\"flex w-full items-center justify-between py-4 text-left\"\n        onClick={() => setOpen(!open)}\n      >\n        <span className=\"font-medium\">{title}</span>\n        {icon}\n        <svg\n          className={`h-4 w-4 transform transition-transform ${open ? \"rotate-180\" : \"\"}`}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          strokeWidth={2}\n          stroke=\"currentColor\"\n        >\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </button>\n      {open && <div className=\"pb-4 pt-2 space-y-4\">{children}</div>}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Card from \"../components/ui/Card\";\nimport Input from \"../components/ui/Input\";\nimport Button from \"../components/ui/Button\";\nimport Switch from \"../components/ui/Switch\";\nimport { Accordion, AccordionItem } from \"../components/ui/Accordion\";\nimport { useAppContext } from \"../context/AppContext\";\n\nexport default function Settings() {\n  const [email] = useState(\"john.doe@example.com\");\n  const [pwd, setPwd] = useState({ current: \"\", next: \"\", confirm: \"\" });\n  const [notify, setNotify] = useState(true);\n  const { events, setEvents } = useAppContext();\n\n  const clearSessions = () => {\n    setEvents(events.filter((e) => !e.title.startsWith(\"Study: \")));\n  };\n\n  return (\n    <div className=\"space-y-8 pb-24\">\n      <h1 className=\"text-4xl font-semibold\">Settings</h1>\n      <Card className=\"p-6\">\n        <Accordion>\n          <AccordionItem title=\"Account Settings\" defaultOpen>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex-1\">\n                  <label className=\"block text-sm font-medium\">Email Address</label>\n                  <Input value={email} readOnly />\n                </div>\n                <Button variant=\"ghost\" className=\"ml-4\">Edit</Button>\n              </div>\n              <div className=\"space-y-2\">\n                <label className=\"block text-sm font-medium\">Change Password</label>\n                <Input\n                  type=\"password\"\n                  placeholder=\"Current Password\"\n                  value={pwd.current}\n                  onChange={(e) => setPwd({ ...pwd, current: e.target.value })}\n                />\n                <Input\n                  type=\"password\"\n                  placeholder=\"New Password\"\n                  value={pwd.next}\n                  onChange={(e) => setPwd({ ...pwd, next: e.target.value })}\n                />\n                <Input\n                  type=\"password\"\n                  placeholder=\"Confirm New Password\"\n                  value={pwd.confirm}\n                  onChange={(e) => setPwd({ ...pwd, confirm: e.target.value })}\n                />\n                <div className=\"flex items-center justify-between pt-2\">\n                  <span>Receive email notifications</span>\n                  <Switch checked={notify} onChange={setNotify} />\n                </div>\n                <Button variant=\"secondary\" className=\"w-full mt-2\">Update Password</Button>\n              </div>\n            </div>\n          </AccordionItem>\n          <AccordionItem title=\"Sync Preferences\">\n            <div className=\"space-y-2\">\n              <label className=\"flex items-center space-x-2\"><input type=\"checkbox\" className=\"h-4 w-4\"/> <span>Google</span></label>\n              <label className=\"flex items-center space-x-2\"><input type=\"checkbox\" className=\"h-4 w-4\"/> <span>iCal</span></label>\n            </div>\n          </AccordionItem>\n            <AccordionItem title=\"Privacy & Data\">\n              <div className=\"space-y-2\">\n                <label className=\"flex items-center justify-between\"><span>Discoverable profile</span><Switch checked={false} onChange={() => {}}/></label>\n                <label className=\"flex items-center justify-between\"><span>Show online status</span><Switch checked={true} onChange={() => {}}/></label>\n                <Button variant=\"ghost\">Download my data</Button>\n                <Button variant=\"ghost\" onClick={clearSessions}>Clear Study Sessions</Button>\n              </div>\n            </AccordionItem>\n        </Accordion>\n      </Card>\n      <div className=\"fixed bottom-0 left-0 right-0 border-t border-gray-200 bg-gray-50 p-4 text-right\">\n        <Button>Save Changes</Button>\n      </div>\n    </div>\n  );\n}\n"],"names":["Switch","checked","onChange","className","jsx","type","onClick","children","Accordion","AccordionItem","title","defaultOpen","icon","open","setOpen","useState","jsxs","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","Settings","email","pwd","setPwd","current","next","confirm","notify","setNotify","events","setEvents","useAppContext","Card","Input","value","readOnly","Button","variant","placeholder","e","target","filter","startsWith"],"mappings":"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"}