{"version":3,"file":"EditTask-CZk-wiZf.js","sources":["../../src/components/ui/Select.jsx","../../src/components/ui/Textarea.jsx","../../src/pages/EditTask.jsx"],"sourcesContent":["import React from \"react\";\n\nexport default function Select({ className = \"\", children, ...props }) {\n  return (\n    <select\n      className={`w-full rounded-lg border border-gray-300 px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500/40 focus:outline-none ${className}`}\n      {...props}\n    >\n      {children}\n    </select>\n  );\n}\n","import React from \"react\";\n\nexport default function Textarea({ className = \"\", ...props }) {\n  return (\n    <textarea\n      className={`w-full rounded-lg border border-gray-300 px-3 py-2 text-sm focus:ring-2 focus:ring-blue-500/40 focus:outline-none ${className}`}\n      {...props}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport Card from '../components/ui/Card';\nimport Button from '../components/ui/Button';\nimport Input from '../components/ui/Input';\nimport Select from '../components/ui/Select';\nimport Textarea from '../components/ui/Textarea';\n\nexport default function EditTask() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  // In a real app, you'''d fetch the task data based on the id\n  // For now, we'''ll use some placeholder data\n  const [taskName, setTaskName] = useState('Complete Research Paper Draft');\n  const [course, setCourse] = useState('Advanced Data Structures');\n  const [deadline, setDeadline] = useState('2024-05-15');\n  const [estimatedTime, setEstimatedTime] = useState('8');\n  const [priority, setPriority] = useState('High');\n  const [description, setDescription] = useState('This is a placeholder description for the research paper draft. It needs to be updated with the actual details of the task.');\n\n  const handleSaveChanges = (e) => {\n    e.preventDefault();\n    // Here you would typically update the task in your database\n    console.log('Saving changes for task:', id);\n    navigate(`/task/${id}`); // Go back to task details page\n  };\n\n  const handleCancel = () => {\n    navigate(`/task/${id}`); // Go back to task details page\n  };\n\n\n  return (\n    <div className=\"space-y-6\">\n        <Link to={`/task/${id}`} className=\"text-[#2563eb]\">â€¹ Back to Task Details</Link>\n        <Card className=\"p-6\">\n            <h1 className=\"text-2xl font-semibold mb-4\">Edit Task</h1>\n            <form onSubmit={handleSaveChanges} className=\"space-y-4\">\n                <div>\n                    <label htmlFor=\"taskName\" className=\"block text-sm font-medium text-gray-700\">Task Name</label>\n                    <Input\n                        id=\"taskName\"\n                        value={taskName}\n                        onChange={(e) => setTaskName(e.target.value)}\n                        className=\"mt-1 block w-full\"\n                    />\n                </div>\n\n                <div>\n                    <label htmlFor=\"course\" className=\"block text-sm font-medium text-gray-700\">Course</label>\n                    <Input\n                        id=\"course\"\n                        value={course}\n                        onChange={(e) => setCourse(e.target.value)}\n                        className=\"mt-1 block w-full\"\n                    />\n                </div>\n\n                <div>\n                    <label htmlFor=\"deadline\" className=\"block text-sm font-medium text-gray-700\">Deadline</label>\n                    <Input\n                        type=\"date\"\n                        id=\"deadline\"\n                        value={deadline}\n                        onChange={(e) => setDeadline(e.target.value)}\n                        className=\"mt-1 block w-full\"\n                    />\n                </div>\n\n                <div>\n                    <label htmlFor=\"estimatedTime\" className=\"block text-sm font-medium text-gray-700\">Estimated Completion Time (hours)</label>\n                    <Input\n                        type=\"number\"\n                        id=\"estimatedTime\"\n                        value={estimatedTime}\n                        onChange={(e) => setEstimatedTime(e.target.value)}\n                        className=\"mt-1 block w-full\"\n                    />\n                </div>\n\n                <div>\n                    <label htmlFor=\"priority\" className=\"block text-sm font-medium text-gray-700\">Priority</label>\n                    <Select\n                        id=\"priority\"\n                        value={priority}\n                        onChange={(e) => setPriority(e.target.value)}\n                        className=\"mt-1 block w-full\"\n                    >\n                        <option>Low</option>\n                        <option>Medium</option>\n                        <option>High</option>\n                    </Select>\n                </div>\n                \n                <div>\n                    <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">Description</label>\n                    <Textarea\n                        id=\"description\"\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                        className=\"mt-1 block w-full\"\n                        rows=\"4\"\n                    />\n                </div>\n\n                <div className=\"flex justify-end space-x-4\">\n                    <Button type=\"button\" variant=\"ghost\" onClick={handleCancel}>Cancel</Button>\n                    <Button type=\"submit\">Save Changes</Button>\n                </div>\n            </form>\n        </Card>\n    </div>\n  );\n}\n"],"names":["Select","className","children","props","jsx","Textarea","EditTask","id","useParams","navigate","useNavigate","taskName","setTaskName","useState","course","setCourse","deadline","setDeadline","estimatedTime","setEstimatedTime","priority","setPriority","description","setDescription","jsxs","Link","to","Card","onSubmit","e","preventDefault","console","log","htmlFor","Input","value","onChange","target","type","rows","Button","variant","onClick"],"mappings":"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"}